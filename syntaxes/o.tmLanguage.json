{
    "name": "O Language",
    "scopeName": "source.o",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#functions"
        },
        {
            "include": "#types"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.o",
                    "match": "//.*$"
                },
                {
                    "name": "comment.block.o",
                    "begin": "/\\*",
                    "end": "\\*/"
                }
            ]
        },
        "keywords": {
            "patterns": [{
                "name": "keyword.control.o",
                "match": "\\b(if|else|while|for|return|break|continue|switch|case|default|func|struct|enum|const|var|import|package|interface|type|map|chan|go|select|defer|fallthrough|range|true|false|nil)\\b"
            }]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.double.o",
                    "begin": "\"",
                    "end": "\"",
                    "patterns": [
                        {
                            "name": "constant.character.escape.o",
                            "match": "\\\\."
                        }
                    ]
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.decimal.o",
                    "match": "\\b([0-9]+\\.?[0-9]*)\\b"
                },
                {
                    "name": "constant.numeric.hexadecimal.o",
                    "match": "\\b0x[0-9a-fA-F]+\\b"
                }
            ]
        },
        "functions": {
            "patterns": [
                {
                    "name": "entity.name.function.o",
                    "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\("
                }
            ]
        },
        "types": {
            "patterns": [
                {
                    "name": "storage.type.o",
                    "match": "\\b(int|float|string|bool|byte|rune|complex64|complex128|error)\\b"
                },
                {
                    "name": "storage.type.numeric.o",
                    "match": "\\b(int8|int16|int32|int64|uint8|uint16|uint32|uint64|float32|float64)\\b"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.o",
                    "match": "\\+|-|\\*|/|%|\\^|&|\\||!|<|>|=|:|\\?"
                }
            ]
        }
    }
}
